package solutions;

import java.util.ArrayList;
import java.util.HashSet;

import basicTools.NumberCharacteristics;

public class Euler92 {

	
	
	public static void main(String[] args) {
		
		ArrayList<Long> digits;
		Long seqValue;
		int total = 0;
		HashSet<Long> knownSuccess = new HashSet<Long>();
		HashSet<Long> thisSeq;
		
		
		for (Long i = new Long("1"); i <= 44; i++) {
			
			thisSeq = new HashSet<>();
			seqValue = i;
			
			while (!knownSuccess.contains(seqValue)) {
				thisSeq.add(seqValue);
				digits = NumberCharacteristics.getDigits(seqValue);
				seqValue = (long) digits.stream().map(x -> Math.pow(x, 2)).mapToDouble(x -> x).sum();
				if (seqValue == (long) 89) {
					
					total++;
					break;
				} else if (seqValue == 1) {
					knownSuccess.addAll(thisSeq);
					for(Long j : thisSeq) System.out.println(j);
				}
			}
			
			
		}
		
//		for(Long i : knownSuccess) System.out.println(i);
		System.out.println(total);
	}
	
}
