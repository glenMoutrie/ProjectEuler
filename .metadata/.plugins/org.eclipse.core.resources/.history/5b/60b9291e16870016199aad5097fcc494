package basicTools.Fraction;

import java.math.BigInteger;

public class BigIntegerFraction {

	BigInteger numerator;
	BigInteger denominator;
	double value;
	
	public BigIntegerFraction(int numerator, int denominator) {
		this.numerator = new BigInteger(Integer.toString(numerator));
		this.denominator = new BigInteger(Integer.toString(denominator));
		calculateValue();
		
	}
	
	public BigIntegerFraction(BigInteger numerator, BigInteger denominator) {
		this.numerator = numerator;
		this.denominator = denominator;
		calculateValue();
		
	}
	
	@Override
	public void calculateValue() {
		this.value = this.numerator.divide(this.denominator).doubleValue();
	}


	/*
	 * Basic Numerical Methods
	 */
	
	@Override
	public BigIntegerFraction multiply(BigIntegerFraction x) {
		BigIntegerFraction update = new BigIntegerFraction(this.numerator.multiply(x.getNumerator()),
				denominator);
		
		return(update);
		
	}

	@Override
	public Fraction add(IntegerFraction x) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Fraction add(int x) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void invert() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void print() {
		// TODO Auto-generated method stub
		
	}
	
	public BigInteger getNumerator() {
		return numerator;
	}
	
	public BigInteger getDenominator() {
		return denominator;
	}
	
	public double getValue() {
		return value;
	}

}
