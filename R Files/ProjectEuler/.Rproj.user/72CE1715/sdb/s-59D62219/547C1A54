{
    "collab_server" : "",
    "contents" : "# Euler Twenty Three\n\nfactorFinder <- function(number) {\n  \n  # Create a bunch of meta shit\n  end.point <- sqrt(number)\n  divisor <- c()\n  other.divisor <- c()\n  is.proper <- F\n  result <- c()\n  \n  # Finally get your arse around to doing something with them\n  for(i in 1:end.point){\n    divisor <- number%%i\n    if(divisor == 0) {\n      result[length(result) + 1] <- i\n      \n      # Make an efficiency saving by considering only  up to square points\n      other.divisor <- number/i\n      if(other.divisor!=i){\n        result[length(result) + 1] <- other.divisor\n      }\n      \n    }\n  }\n  \n  # Return your shit.\n  result\n}\n\nfactorFinder(10^3)\n\nsumOfProperDivisors <- function(number){\n  sum(factorFinder(number)) - number\n}\n\nsumOfProperDivisors(12)\n\n# Going through the process\n\n# We know this from the question, now find the sum of proper divisors for each\nrange <- 1:28123\ndivisor.sums <- sapply(range,sumOfProperDivisors)\nabundent <- mapply(\"<\",range,divisor.sums)\n\n# Find the sums of all abundent values\nabundent.values <- range[abundent]\nsum.of.sums <- sapply(abundent.values,\n       function (x) {sapply(abundent.values,function (y) {x+y})})\n\n# As it is a symmetric matrix\nabundent.sums <- unique(sum.of.sums[upper.tri(sum.of.sums,diag = T)])\n\n# The final result\nsum(range[!(range %in% abundent.sums)])\n",
    "created" : 1487176051813.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "16018882",
    "id" : "547C1A54",
    "lastKnownWriteTime" : 1447843846,
    "last_content_update" : 1487176147506,
    "path" : "~/Documents/ProjectEuler/R Files/ProjectEuler/R/Euler23.R",
    "project_path" : "R/Euler23.R",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}