{
    "collab_server" : "",
    "contents" : "euler49 <- function() {\n\n\t# Get possible digits accounting for the possiblility of repeated digits\n\tpossible.dig <- combn(floor(seq(1,9.9,0.25)),4)\n\tpossible.dig <- split(t(possible.dig), 1:ncol(possible.dig))\n\n\t# Remove unique values\n\tpossible.dig <- lapply(possible.dig, sort)\n\tpossible.dig <- unique(possible.dig)\n\n\t# Convert to numbers\n\tpossible.dig <- lapply(possible.dig, bindDigits)\n\n\t# Get possible sequences of digits\n\tsequences <- lapply(possible.dig, allPermutations)\n\n\t# Get all prime values\n\tprimes <- lapply(sequences, isPrime)\n\tprimes <- mapply(function(values, primes) {values[primes]}, values = sequences, primes = primes)\n\tprimes <- primes[sapply(primes, length) > 0]\n\n\t# Find the arithmetic sequences and return them\n\tdifferences <- lapply(primes,findArithmeticSeq, seq.length = 3)\n\tdifferences[!sapply(differences, is.null)]\n\n}\n\n",
    "created" : 1487174699586.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2796917114",
    "id" : "A3919DCC",
    "lastKnownWriteTime" : 1487174708,
    "last_content_update" : 1487174708501,
    "path" : "~/Documents/ProjectEuler/R Files/ProjectEuler/R/Euler49.R",
    "project_path" : "R/Euler49.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}